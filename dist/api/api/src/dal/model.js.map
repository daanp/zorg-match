{
  "version": 3,
  "sources": ["../../../../../api/src/dal/model.ts"],
  "sourcesContent": ["import { DataTypes, HasMany, HasOne, Model, Sequelize } from 'sequelize';\nimport { v4 as uuid } from 'uuid';\n\nconst sequelize = new Sequelize('sqlite::memory:');\n\nexport class User extends Model {\n  static Appointments: HasMany<User, Appointment>;\n}\n\nUser.init(\n  {\n    username: DataTypes.STRING,\n    id: {\n      type: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n  },\n  { sequelize, modelName: 'user' }\n);\n\n// class Schedule extends Model {\n//   static Appointments: HasMany<Schedule, Appointment>;\n// }\n//\n// Schedule.init(\n//   {\n//     id: {\n//       type: DataTypes.UUIDV4,\n//       primaryKey: true,\n//     },\n//   },\n//   { sequelize, modelName: 'schedule' }\n// );\n\nexport class Appointment extends Model {\n  static associate(models) {\n    Appointment.belongsTo(models.User, { as: 'creator', foreignKey: 'creatorId' });\n  }\n}\n\nAppointment.init(\n  {\n    start: DataTypes.TIME,\n    end: DataTypes.TIME,\n    id: {\n      type: DataTypes.UUIDV4,\n      primaryKey: true,\n    },\n  },\n  { sequelize, modelName: 'appointment' }\n);\n\nUser.Appointments = User.hasMany(Appointment);\nconst Creator = Appointment.belongsTo(User, { as: 'creator' });\n\n(async () => {\n  await sequelize.sync();\n  let janeId = uuid();\n  const jane = await User.create({\n    username: 'janedoe',\n    id: janeId,\n  });\n  const appointment = await Appointment.create(\n    {\n      start: Date.parse('01 Jan 2020 00:00:00 GMT'),\n      end: Date.parse('02 Jan 2020 00:00:00 GMT'),\n      id: uuid(),\n      userId: janeId,\n    },\n  );\n})();\n\n(async () => {\n  await sequelize.sync();\n})();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA6D;AAC7D,kBAA2B;AAE3B,MAAM,YAAY,IAAI,2BAAU,iBAAiB;AAE1C,MAAM,aAAa,uBAAM;AAAA,EAC9B,OAAO;AACT;AAEA,KAAK;AAAA,EACH;AAAA,IACE,UAAU,2BAAU;AAAA,IACpB,IAAI;AAAA,MACF,MAAM,2BAAU;AAAA,MAChB,YAAY;AAAA,IACd;AAAA,EACF;AAAA,EACA,EAAE,WAAW,WAAW,OAAO;AACjC;AAgBO,MAAM,oBAAoB,uBAAM;AAAA,EACrC,OAAO,UAAU,QAAQ;AACvB,gBAAY,UAAU,OAAO,MAAM,EAAE,IAAI,WAAW,YAAY,YAAY,CAAC;AAAA,EAC/E;AACF;AAEA,YAAY;AAAA,EACV;AAAA,IACE,OAAO,2BAAU;AAAA,IACjB,KAAK,2BAAU;AAAA,IACf,IAAI;AAAA,MACF,MAAM,2BAAU;AAAA,MAChB,YAAY;AAAA,IACd;AAAA,EACF;AAAA,EACA,EAAE,WAAW,WAAW,cAAc;AACxC;AAEA,KAAK,eAAe,KAAK,QAAQ,WAAW;AAC5C,MAAM,UAAU,YAAY,UAAU,MAAM,EAAE,IAAI,UAAU,CAAC;AAAA,CAE5D,YAAY;AACX,QAAM,UAAU,KAAK;AACrB,MAAI,aAAS,YAAAA,IAAK;AAClB,QAAM,OAAO,MAAM,KAAK,OAAO;AAAA,IAC7B,UAAU;AAAA,IACV,IAAI;AAAA,EACN,CAAC;AACD,QAAM,cAAc,MAAM,YAAY;AAAA,IACpC;AAAA,MACE,OAAO,KAAK,MAAM,0BAA0B;AAAA,MAC5C,KAAK,KAAK,MAAM,0BAA0B;AAAA,MAC1C,QAAI,YAAAA,IAAK;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,EACF;AACF,GAAG;AAAA,CAEF,YAAY;AACX,QAAM,UAAU,KAAK;AACvB,GAAG;",
  "names": ["uuid"]
}
