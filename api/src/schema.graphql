scalar DateTime

enum Status {
    OPEN
    CLOSED
}

enum CareType {
    HOUSEHOLD
    MEDICAL
}

type CareRequest {
    id: ID!
    type: CareType!
    start: DateTime!
    end: DateTime!
    clientName: String!
    carerRemarks: String
    clientRemarks: String
    status: Status!
}

type Query {
    careRequests(where: CareRequestFilter): [CareRequest]
}

type Mutation {
    addCareRequest(input: CareRequestInput): CareRequest
    acceptCareRequest(input: AcceptCareRequestInput): CareRequest
}

input CareRequestInput {
    start: DateTime!
    type: CareType!
    end: DateTime!
    clientName: String!
    clientRemarks: String
}

input AcceptCareRequestInput {
    requestId: ID!
    carerName: String!
    carerRemarks: String
}

input CareRequestFilter {
    status: Status
}